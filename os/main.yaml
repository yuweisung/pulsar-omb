---
- hosts: all
  gather_facts: no
  become: yes
  tasks:
  - name: Waiting for ssh
    wait_for_connection:
      timeout: 900
  - name: apt update
    ansible.builtin.apt:
      update_cache: yes
  - name: apt utils
    ansible.builtin.apt:
      pkg:
        - wget
        - default-jdk
        - sysstat
        - vim
        - tuned
        - tuned-utils
        - tuned-utils-systemtap
        - chrony
  - name: tuned service
    systemd:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
    - chrony
    - tuned
  - name: Set performance profile
    command: tuned-adm profile latency-performance
  - name: Download Pulsar binary package
    unarchive:
      src: https://archive.apache.org/dist/pulsar/pulsar-{{ pulsar_version }}/apache-pulsar-{{ pulsar_version }}-bin.tar.gz
      remote_src: yes
      dest: /opt
  - name: Create necessary directories
    file:
      src: /opt/apache-pulsar-{{ pulsar_version }}
      dest: /opt/pulsar
      state: link
- hosts: zookeeper
  gather_facts: yes
  become: true
  tasks:
  - name: Format disks
    tags: disk
    filesystem:
      fstype: ext4
      dev: '{{ item }}'
    with_items:
    - '/dev/disk/by-id/google-persistent-disk-1'
  - name: Mount disks
    tags: disk
    mount:
      path: "{{ item.path }}"
      src: "{{ item.src }}"
      fstype: ext4
      opts: defaults,noatime,nodiscard
      state: mounted
    with_items:
    - { path: "/opt/pulsar/data/zookeeper", src: "/dev/disk/by-id/google-persistent-disk-1" }
  - name: set facts
    tags: zk-facts
    set_fact:
      zid: "{{ groups['zookeeper'].index(inventory_hostname)+1 }}"
      cluster_name: "sn-se-gcp"
      max_heap_memory: "{{ zookeeper_max_heap_memory | default('2g') }}" 
      # max_heap_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      max_direct_memory: "{{ zookeeper_max_direct_memory | default('2g') }}"
      # max_direct_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      service_url: "pulsar://{{ groups['broker']|map('extract', hostvars, 'inventory_hostname')|map('regex_replace','^(.*)$','\\1:6650')|join(',') }}"
      http_url: "http://{{ groups['broker']|map('extract', hostvars, 'inventory_hostname')|map('regex_replace','^(.*)$','\\1:8080')|join(',') }}"
  - name: add pulsar env
    tags: zk-config
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - {src: '../templates/pulsar_env.sh', dest: '/opt/pulsar/conf/pulsar_env.sh'}
    - {src: '../templates/zoo.cfg', dest: '/opt/pulsar/conf/zookeeper.conf'}
    - {src: '../templates/myid', dest: '/opt/pulsar/data/zookeeper/myid'}
    - {src: '../templates/zookeeper.service', dest: '/etc/systemd/system/zookeeper.service'}
  - name: zookeeper systemd
    tags: zk-config
    systemd:
      state: restarted
      daemon_reload: yes
      enabled: true
      name: "zookeeper"
  - name: init znode
    tags: zk-config
    shell: |
      bin/pulsar initialize-cluster-metadata \
        --cluster {{ cluster_name }} \
        --zookeeper localhost:2181 \
        --configuration-store localhost:2181 \
        --web-service-url {{ http_url }} \
        --broker-service-url {{ service_url }}
    args:
      chdir: /opt/pulsar
    when: groups['zookeeper'][0] == inventory_hostname

- hosts: bookie
  become: true
  gather_facts: yes
  tasks:
  - name: Format disks
    tags: disk
    filesystem:
      fstype: ext4
      dev: '{{ item }}'
    with_items:
     - '/dev/disk/by-id/google-persistent-disk-1'
     - '/dev/disk/by-id/google-persistent-disk-2'
  - name: Mount disks
    tags: disk
    mount:
      path: "{{ item.path }}"
      src: "{{ item.src }}"
      fstype: ext4
      opts: defaults,noatime,nodiscard
      state: mounted
    with_items:
    - { path: "/opt/pulsar/data/bookkeeper/journal", src: "/dev/disk/by-id/google-persistent-disk-1" }
    - { path: "/opt/pulsar/data/bookkeeper/ledger", src: "/dev/disk/by-id/google-persistent-disk-2"}
  - set_fact:
      max_heap_memory: "{{ bookkeeper_max_heap_memory | default('4g') }}"
      max_direct_memory: "{{ bookkeeper_max_direct_memory | default('4g') }}"
      zookeeper_servers: "{{ groups['zookeeper']|map('extract', hostvars, ['ansible_default_ipv4', 'address'])|map('regex_replace', '^(.*)$', '\\1:2181') | join(',') }}"
  - name: bookie config
    tags: bk-config
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - {src: '../templates/pulsar_env.sh', dest: '/opt/pulsar/conf/pulsar_env.sh'}
    - {src: '../templates/bookkeeper.conf', dest: '/opt/pulsar/conf/bookkeeper.conf'}
    - {src: '../templates/zoo.cfg', dest: '/opt/pulsar/conf/zookeeper.conf'}
    - {src: '../templates/autorecovery.conf', dest: '/opt/pulsar/conf/autorecovery.conf'}
    - {src: '../templates/bookkeeper.service', dest: '/etc/systemd/system/bookkeeper.service'}
    - {src: '../templates/autorecovery.service', dest: '/etc/systemd/system/autorecovery.service'}
  - name: bookie systemd
    tags: bk-config
    systemd:
      state: restarted
      enabled: yes
      daemon_reload: yes
      name: "bookkeeper"
  - name: autorecovery systemd
    systemd:
      state: restarted
      enabled: yes
      daemon_reload: yes
      name: "autorecovery"

- hosts: broker
  gather_facts: yes
  become: true
  tasks:
  - set_fact:
      max_heap_memory: "{{ broker_max_heap_memory | default('2g') }}"
      # max_heap_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      max_direct_memory: "{{ broker_max_direct_memory | default('2g') }}"
      # max_direct_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      cluster_name: "sn-se-gcp"
      zookeeper_servers: "{{ groups['zookeeper']|map('extract', hostvars, ['ansible_default_ipv4', 'address'])|map('regex_replace', '^(.*)$', '\\1:2181') | join(',') }}"
  - name: connector dir
    file:
      path: /opt/pulsar/connectors
      state: directory
  - name: download pulsar io packages
    get_url:
      url: https://archive.apache.org/dist/pulsar/pulsar-{{ pulsar_version }}/connectors/pulsar-io-{{ item }}-{{ pulsar_version }}.nar
      dest: /opt/pulsar/connectors/pulsar-io-{{ item }}-{{ pulsar_version }}.nar
    loop:
    - kafka
  - name: setup broker
    tags: br-config
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - {src: '../templates/pulsar_env.sh', dest: '/opt/pulsar/conf/pulsar_env.sh'}
    - {src: '../templates/broker.conf', dest: '/opt/pulsar/conf/broker.conf'}
    - {src: '../templates/functions_worker.yml', dest: '/opt/pulsar/conf/functions_worker.yml'}
    - {src: '../templates/zoo.cfg', dest: '/opt/pulsar/conf/zookeeper.conf'}
    - {src: '../templates/pulsar.broker.service', dest: '/etc/systemd/system/pulsar.broker.service'}
  - name: broker systemd
    tags: br-config
    systemd:
      state: restarted
      daemon_reload: yes
      enabled: yes
      name: "pulsar.broker"

- hosts: client
  gather_facts: yes
  become: true
  tasks:
  - name: set facts
    set_fact:
      cluster_name: "sn-se-gcp"
      service_url: "pulsar://{{ groups['broker']|map('extract', hostvars, 'inventory_hostname')|map('regex_replace','^(.*)$','\\1:6650')|join(',') }}"
      http_url: "http://{{ groups['broker']|map('extract', hostvars, 'inventory_hostname')|map('regex_replace','^(.*)$','\\1:8080')|join(',') }}"
  - name: setup client
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - {src: '../templates/client.conf', dest: '/opt/pulsar/conf/client.conf'}
  
- hosts: proxy
  gather_facts: yes
  become: true
  tasks:
  - set_fact:
      max_heap_memory: "2g"
      # max_heap_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      max_direct_memory: "2g"
      # max_direct_memory: "{{ hostvars[zk][ansible_facts][ansible_memtotal_mb] * 0.45 | int }}"
      cluster_name: "sn-se-gcp"
      zookeeper_servers: "{{ groups['zookeeper']|map('extract', hostvars, ['ansible_default_ipv4', 'address'])|map('regex_replace', '^(.*)$', '\\1:2181') | join(',') }}"
  - name: Set up proxy
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - {src: '../templates/pulsar_env.sh', dest: '/opt/pulsar/conf/pulsar_env.sh'}
    - {src: '../templates/proxy.conf', dest: '/opt/pulsar/conf/proxy.conf'}
    - {src: '../templates/broker.conf', dest: '/opt/pulsar/conf/broker.conf'}
    - {src: '../templates/zoo.cfg', dest: '/opt/pulsar/conf/zookeeper.conf'}
    - {src: '../templates/pulsar.proxy.service', dest: '/etc/systemd/system/pulsar.proxy.service'}
  - systemd:
      state: restarted
      daemon_reload: yes
      enabled: yes
      name: "pulsar.proxy"